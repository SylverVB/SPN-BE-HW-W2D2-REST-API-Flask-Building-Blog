name: Flask Advanced Blog API CI/CD

on:
  push:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.9

      - name: Create Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      - name: Print environment variables
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "Database URL: $DATABASE_URL"
          nslookup $(echo $DATABASE_URL | sed -e 's,^.*//,,' -e 's,:.*,,')
          
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.9

      - name: Create Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      - name: Wait for Database to be Ready
        run: sleep 10

      - name: Debugging Database URL
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "Database URL: $DATABASE_URL"
          nslookup $(echo $DATABASE_URL | sed -e 's,^.*//,,' -e 's,:.*,,')
      
      - name: Check database connection
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          sudo apt-get install -y postgresql-client
          psql $DATABASE_URL -c '\l'

      - name: Run any database migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          source venv/bin/activate
          flask db upgrade

      - name: Run the tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          source venv/bin/activate
          python -m unittest discover -v -s .
  
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy the App
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: curl "$deploy_url"
