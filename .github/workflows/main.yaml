name: Flask Advanced Blog API CI/CD

on:
  push:
    branches: [main, master]
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.9

      - name: Create Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      - name: Print debugging information
        run: |
          echo "Python Version: $(python --version)"
          echo "Working Directory: $(pwd)"
          echo "Contents of Working Directory: $(ls -l)"
          echo "Contents of site-packages: $(ls -l venv/lib/python*/site-packages)"

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.9

      - name: Create Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      - name: Set up Database URL
        run: |
          if [ -n "${{ secrets.RENDER_DATABASE_URL }}" ]; then
            echo "DATABASE_URL=${{ secrets.RENDER_DATABASE_URL }}" >> $GITHUB_ENV
          else
            echo "DATABASE_URL=sqlite:///$(pwd)/test.db" >> $GITHUB_ENV
          fi

      - name: Print DATABASE_URL for debugging
        run: echo "DATABASE_URL=${{ env.DATABASE_URL }}"

      - name: Run any database migrations
        run: |
          source venv/bin/activate
          flask db upgrade

      - name: Check Database Content
        run: |
          source venv/bin/activate
          sqlite3 $(pwd)/test.db "SELECT name FROM sqlite_master WHERE type='table';"

      - name: Set up roles
        run: |
          source venv/bin/activate
          flask setup_roles

      - name: Check Roles Setup
        run: |
          source venv/bin/activate
          sqlite3 $(pwd)/test.db "SELECT * FROM role;"

      - name: Run the tests
        run: |
          source venv/bin/activate
          python -m unittest discover -v -s .

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy the App
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}  
        run: curl "$deploy_url"